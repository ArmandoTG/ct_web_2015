@model Entidades.EFCF.Product

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Create","Product"))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductNumber, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductNumber)
                @Html.ValidationMessageFor(model => model.ProductNumber)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MakeFlag, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MakeFlag)
                @Html.ValidationMessageFor(model => model.MakeFlag)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinishedGoodsFlag, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinishedGoodsFlag)
                @Html.ValidationMessageFor(model => model.FinishedGoodsFlag)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Color, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Color)
                @Html.ValidationMessageFor(model => model.Color)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SafetyStockLevel, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SafetyStockLevel)
                @Html.ValidationMessageFor(model => model.SafetyStockLevel)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReorderPoint, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReorderPoint)
                @Html.ValidationMessageFor(model => model.ReorderPoint)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StandardCost, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StandardCost)
                @Html.ValidationMessageFor(model => model.StandardCost)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ListPrice, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ListPrice)
                @Html.ValidationMessageFor(model => model.ListPrice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size)
                @Html.ValidationMessageFor(model => model.Size)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight)
                @Html.ValidationMessageFor(model => model.Weight)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DaysToManufacture, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DaysToManufacture)
                @Html.ValidationMessageFor(model => model.DaysToManufacture)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductLine, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductLine)
                @Html.ValidationMessageFor(model => model.ProductLine)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Class, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Class)
                @Html.ValidationMessageFor(model => model.Class)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Style, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Style)
                @Html.ValidationMessageFor(model => model.Style)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SellStartDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SellStartDate)
                @Html.ValidationMessageFor(model => model.SellStartDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SellEndDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SellEndDate)
                @Html.ValidationMessageFor(model => model.SellEndDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiscontinuedDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiscontinuedDate)
                @Html.ValidationMessageFor(model => model.DiscontinuedDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductModelID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProductModelID,
                                                new SelectList(ViewBag.ProductModels, "ProductModelID", "Name"),
                                                "-- Select a Model --")
                @Html.ValidationMessageFor(model => model.ProductModelID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductSubcategoryID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProductSubcategoryID,
                                                new SelectList(ViewBag.ProductSubcategories, "ProductSubcategoryID", "Name"),
                                                "-- Select a Subcategory --")
                @Html.ValidationMessageFor(model => model.ProductSubcategoryID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SizeUnitMeasureCode, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SizeUnitMeasureCode,
                                                new SelectList(ViewBag.UnitMeasures, "UnitMeasureCode", "Name"),
                                                "-- Select a Unit Measure --")
                @Html.ValidationMessageFor(model => model.SizeUnitMeasureCode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WeightUnitMeasureCode, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.WeightUnitMeasureCode,
                                                new SelectList(ViewBag.UnitMeasures, "UnitMeasureCode", "Name"),
                                                "-- Select a Unit Measure --")
                @Html.ValidationMessageFor(model => model.WeightUnitMeasureCode)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
